(function(a, b) {
    function m(a, b, c) {
        var d = h[b.type] || {};
        return a == null ? c || !b.def ? null : b.def : (a = d.floor ? ~~a : parseFloat(a), 
        isNaN(a) ? b.def : d.mod ? (a + d.mod) % d.mod : 0 > a ? 0 : d.max < a ? d.max : a);
    }
    function n(b) {
        var c = f(), d = c._rgba = [];
        return b = b.toLowerCase(), l(e, function(a, e) {
            var f, h = e.re.exec(b), i = h && e.parse(h), j = e.space || "rgba";
            if (i) return f = c[j](i), c[g[j].cache] = f[g[j].cache], d = c._rgba = f._rgba, 
            !1;
        }), d.length ? (d.join() === "0,0,0,0" && a.extend(d, k.transparent), c) : k[b];
    }
    function o(a, b, c) {
        return c = (c + 1) % 1, c * 6 < 1 ? a + (b - a) * c * 6 : c * 2 < 1 ? b : c * 3 < 2 ? a + (b - a) * (2 / 3 - c) * 6 : a;
    }
    var c = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor", d = /^([\-+])=\s*(\d+\.?\d*)/, e = [ {
        re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        parse: function(a) {
            return [ a[1], a[2], a[3], a[4] ];
        }
    }, {
        re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        parse: function(a) {
            return [ a[1] * 2.55, a[2] * 2.55, a[3] * 2.55, a[4] ];
        }
    }, {
        re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
        parse: function(a) {
            return [ parseInt(a[1], 16), parseInt(a[2], 16), parseInt(a[3], 16) ];
        }
    }, {
        re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
        parse: function(a) {
            return [ parseInt(a[1] + a[1], 16), parseInt(a[2] + a[2], 16), parseInt(a[3] + a[3], 16) ];
        }
    }, {
        re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
        space: "hsla",
        parse: function(a) {
            return [ a[1], a[2] / 100, a[3] / 100, a[4] ];
        }
    } ], f = a.Color = function(b, c, d, e) {
        return new a.Color.fn.parse(b, c, d, e);
    }, g = {
        rgba: {
            props: {
                red: {
                    idx: 0,
                    type: "byte"
                },
                green: {
                    idx: 1,
                    type: "byte"
                },
                blue: {
                    idx: 2,
                    type: "byte"
                }
            }
        },
        hsla: {
            props: {
                hue: {
                    idx: 0,
                    type: "degrees"
                },
                saturation: {
                    idx: 1,
                    type: "percent"
                },
                lightness: {
                    idx: 2,
                    type: "percent"
                }
            }
        }
    }, h = {
        "byte": {
            floor: !0,
            max: 255
        },
        percent: {
            max: 1
        },
        degrees: {
            mod: 360,
            floor: !0
        }
    }, i = f.support = {}, j = a("<p>")[0], k, l = a.each;
    j.style.cssText = "background-color:rgba(1,1,1,.5)", i.rgba = j.style.backgroundColor.indexOf("rgba") > -1, 
    l(g, function(a, b) {
        b.cache = "_" + a, b.props.alpha = {
            idx: 3,
            type: "percent",
            def: 1
        };
    }), f.fn = a.extend(f.prototype, {
        parse: function(c, d, e, h) {
            if (c === b) return this._rgba = [ null, null, null, null ], this;
            if (c.jquery || c.nodeType) c = a(c).css(d), d = b;
            var i = this, j = a.type(c), o = this._rgba = [];
            d !== b && (c = [ c, d, e, h ], j = "array");
            if (j === "string") return this.parse(n(c) || k._default);
            if (j === "array") return l(g.rgba.props, function(a, b) {
                o[b.idx] = m(c[b.idx], b);
            }), this;
            if (j === "object") return c instanceof f ? l(g, function(a, b) {
                c[b.cache] && (i[b.cache] = c[b.cache].slice());
            }) : l(g, function(b, d) {
                var e = d.cache;
                l(d.props, function(a, b) {
                    if (!i[e] && d.to) {
                        if (a === "alpha" || c[a] == null) return;
                        i[e] = d.to(i._rgba);
                    }
                    i[e][b.idx] = m(c[a], b, !0);
                }), i[e] && a.inArray(null, i[e].slice(0, 3)) < 0 && (i[e][3] = 1, d.from && (i._rgba = d.from(i[e])));
            }), this;
        },
        is: function(a) {
            var b = f(a), c = !0, d = this;
            return l(g, function(a, e) {
                var f, g = b[e.cache];
                return g && (f = d[e.cache] || e.to && e.to(d._rgba) || [], l(e.props, function(a, b) {
                    if (g[b.idx] != null) return c = g[b.idx] === f[b.idx], c;
                })), c;
            }), c;
        },
        _space: function() {
            var a = [], b = this;
            return l(g, function(c, d) {
                b[d.cache] && a.push(c);
            }), a.pop();
        },
        transition: function(a, b) {
            var c = f(a), d = c._space(), e = g[d], i = this.alpha() === 0 ? f("transparent") : this, j = i[e.cache] || e.to(i._rgba), k = j.slice();
            return c = c[e.cache], l(e.props, function(a, d) {
                var e = d.idx, f = j[e], g = c[e], i = h[d.type] || {};
                if (g === null) return;
                f === null ? k[e] = g : (i.mod && (g - f > i.mod / 2 ? f += i.mod : f - g > i.mod / 2 && (f -= i.mod)), 
                k[e] = m((g - f) * b + f, d));
            }), this[d](k);
        },
        blend: function(b) {
            if (this._rgba[3] === 1) return this;
            var c = this._rgba.slice(), d = c.pop(), e = f(b)._rgba;
            return f(a.map(c, function(a, b) {
                return (1 - d) * e[b] + d * a;
            }));
        },
        toRgbaString: function() {
            var b = "rgba(", c = a.map(this._rgba, function(a, b) {
                return a == null ? b > 2 ? 1 : 0 : a;
            });
            return c[3] === 1 && (c.pop(), b = "rgb("), b + c.join() + ")";
        },
        toHslaString: function() {
            var b = "hsla(", c = a.map(this.hsla(), function(a, b) {
                return a == null && (a = b > 2 ? 1 : 0), b && b < 3 && (a = Math.round(a * 100) + "%"), 
                a;
            });
            return c[3] === 1 && (c.pop(), b = "hsl("), b + c.join() + ")";
        },
        toHexString: function(b) {
            var c = this._rgba.slice(), d = c.pop();
            return b && c.push(~~(d * 255)), "#" + a.map(c, function(a) {
                return a = (a || 0).toString(16), a.length === 1 ? "0" + a : a;
            }).join("");
        },
        toString: function() {
            return this._rgba[3] === 0 ? "transparent" : this.toRgbaString();
        }
    }), f.fn.parse.prototype = f.fn, g.hsla.to = function(a) {
        if (a[0] == null || a[1] == null || a[2] == null) return [ null, null, null, a[3] ];
        var b = a[0] / 255, c = a[1] / 255, d = a[2] / 255, e = a[3], f = Math.max(b, c, d), g = Math.min(b, c, d), h = f - g, i = f + g, j = i * .5, k, l;
        return g === f ? k = 0 : b === f ? k = 60 * (c - d) / h + 360 : c === f ? k = 60 * (d - b) / h + 120 : k = 60 * (b - c) / h + 240, 
        h === 0 ? l = 0 : j <= .5 ? l = h / i : l = h / (2 - i), [ Math.round(k) % 360, l, j, e == null ? 1 : e ];
    }, g.hsla.from = function(a) {
        if (a[0] == null || a[1] == null || a[2] == null) return [ null, null, null, a[3] ];
        var b = a[0] / 360, c = a[1], d = a[2], e = a[3], f = d <= .5 ? d * (1 + c) : d + c - d * c, g = 2 * d - f;
        return [ Math.round(o(g, f, b + 1 / 3) * 255), Math.round(o(g, f, b) * 255), Math.round(o(g, f, b - 1 / 3) * 255), e ];
    }, l(g, function(c, e) {
        var g = e.props, h = e.cache, i = e.to, j = e.from;
        f.fn[c] = function(c) {
            i && !this[h] && (this[h] = i(this._rgba));
            if (c === b) return this[h].slice();
            var d, e = a.type(c), k = e === "array" || e === "object" ? c : arguments, n = this[h].slice();
            return l(g, function(a, b) {
                var c = k[e === "object" ? a : b.idx];
                c == null && (c = n[b.idx]), n[b.idx] = m(c, b);
            }), j ? (d = f(j(n)), d[h] = n, d) : f(n);
        }, l(g, function(b, e) {
            if (f.fn[b]) return;
            f.fn[b] = function(f) {
                var g = a.type(f), h = b === "alpha" ? this._hsla ? "hsla" : "rgba" : c, i = this[h](), j = i[e.idx], k;
                return g === "undefined" ? j : (g === "function" && (f = f.call(this, j), g = a.type(f)), 
                f == null && e.empty ? this : (g === "string" && (k = d.exec(f), k && (f = j + parseFloat(k[2]) * (k[1] === "+" ? 1 : -1))), 
                i[e.idx] = f, this[h](i)));
            };
        });
    }), f.hook = function(b) {
        var c = b.split(" ");
        l(c, function(b, c) {
            a.cssHooks[c] = {
                set: function(b, d) {
                    var e, g, h = "";
                    if (d !== "transparent" && (a.type(d) !== "string" || (e = n(d)))) {
                        d = f(e || d);
                        if (!i.rgba && d._rgba[3] !== 1) {
                            g = c === "backgroundColor" ? b.parentNode : b;
                            while ((h === "" || h === "transparent") && g && g.style) try {
                                h = a.css(g, "backgroundColor"), g = g.parentNode;
                            } catch (j) {}
                            d = d.blend(h && h !== "transparent" ? h : "_default");
                        }
                        d = d.toRgbaString();
                    }
                    try {
                        b.style[c] = d;
                    } catch (j) {}
                }
            }, a.fx.step[c] = function(b) {
                b.colorInit || (b.start = f(b.elem, c), b.end = f(b.end), b.colorInit = !0), a.cssHooks[c].set(b.elem, b.start.transition(b.end, b.pos));
            };
        });
    }, f.hook(c), a.cssHooks.borderColor = {
        expand: function(a) {
            var b = {};
            return l([ "Top", "Right", "Bottom", "Left" ], function(c, d) {
                b["border" + d + "Color"] = a;
            }), b;
        }
    }, k = a.Color.names = {
        aqua: "#00ffff",
        black: "#000000",
        blue: "#0000ff",
        fuchsia: "#ff00ff",
        gray: "#808080",
        green: "#008000",
        lime: "#00ff00",
        maroon: "#800000",
        navy: "#000080",
        olive: "#808000",
        purple: "#800080",
        red: "#ff0000",
        silver: "#c0c0c0",
        teal: "#008080",
        white: "#ffffff",
        yellow: "#ffff00",
        transparent: [ null, null, null, 0 ],
        _default: "#ffffff"
    };
})(jQuery);

(function($, window, undefined) {
    "use strict";
    $.HoverDir = function(options, element) {
        this.$el = $(element);
        this._init(options);
    };
    $.HoverDir.defaults = {
        speed: 300,
        easing: "ease",
        hoverDelay: 0,
        inverse: false
    };
    $.HoverDir.prototype = {
        _init: function(options) {
            this.options = $.extend(true, {}, $.HoverDir.defaults, options);
            this.transitionProp = "all " + this.options.speed + "ms " + this.options.easing;
            this.support = Modernizr.csstransitions;
            this._loadEvents();
        },
        _loadEvents: function() {
            var self = this;
            this.$el.on("mouseenter.hoverdir, mouseleave.hoverdir", function(event) {
                var $el = $(this), $hoverElem = $el.find("div"), direction = self._getDir($el, {
                    x: event.pageX,
                    y: event.pageY
                }), styleCSS = self._getStyle(direction);
                if (event.type === "mouseenter") {
                    $hoverElem.hide().css(styleCSS.from);
                    clearTimeout(self.tmhover);
                    self.tmhover = setTimeout(function() {
                        $hoverElem.show(0, function() {
                            var $el = $(this);
                            if (self.support) {
                                $el.css("transition", self.transitionProp);
                            }
                            self._applyAnimation($el, styleCSS.to, self.options.speed);
                        });
                    }, self.options.hoverDelay);
                } else {
                    if (self.support) {
                        $hoverElem.css("transition", self.transitionProp);
                    }
                    clearTimeout(self.tmhover);
                    self._applyAnimation($hoverElem, styleCSS.from, self.options.speed);
                }
            });
        },
        _getDir: function($el, coordinates) {
            var w = $el.width(), h = $el.height(), x = (coordinates.x - $el.offset().left - w / 2) * (w > h ? h / w : 1), y = (coordinates.y - $el.offset().top - h / 2) * (h > w ? w / h : 1), direction = Math.round((Math.atan2(y, x) * (180 / Math.PI) + 180) / 90 + 3) % 4;
            return direction;
        },
        _getStyle: function(direction) {
            var fromStyle, toStyle, slideFromTop = {
                left: "0px",
                top: "-100%"
            }, slideFromBottom = {
                left: "0px",
                top: "100%"
            }, slideFromLeft = {
                left: "-100%",
                top: "0px"
            }, slideFromRight = {
                left: "100%",
                top: "0px"
            }, slideTop = {
                top: "0px"
            }, slideLeft = {
                left: "0px"
            };
            switch (direction) {
              case 0:
                fromStyle = !this.options.inverse ? slideFromTop : slideFromBottom;
                toStyle = slideTop;
                break;

              case 1:
                fromStyle = !this.options.inverse ? slideFromRight : slideFromLeft;
                toStyle = slideLeft;
                break;

              case 2:
                fromStyle = !this.options.inverse ? slideFromBottom : slideFromTop;
                toStyle = slideTop;
                break;

              case 3:
                fromStyle = !this.options.inverse ? slideFromLeft : slideFromRight;
                toStyle = slideLeft;
                break;
            }
            return {
                from: fromStyle,
                to: toStyle
            };
        },
        _applyAnimation: function(el, styleCSS, speed) {
            $.fn.applyStyle = this.support ? $.fn.css : $.fn.animate;
            el.stop().applyStyle(styleCSS, $.extend(true, [], {
                duration: speed + "ms"
            }));
        }
    };
    var logError = function(message) {
        if (window.console) {
            window.console.error(message);
        }
    };
    $.fn.hoverdir = function(options) {
        var instance = $.data(this, "hoverdir");
        if (typeof options === "string") {
            var args = Array.prototype.slice.call(arguments, 1);
            this.each(function() {
                if (!instance) {
                    logError("cannot call methods on hoverdir prior to initialization; " + "attempted to call method '" + options + "'");
                    return;
                }
                if (!$.isFunction(instance[options]) || options.charAt(0) === "_") {
                    logError("no such method '" + options + "' for hoverdir instance");
                    return;
                }
                instance[options].apply(instance, args);
            });
        } else {
            this.each(function() {
                if (instance) {
                    instance._init();
                } else {
                    instance = $.data(this, "hoverdir", new $.HoverDir(options, this));
                }
            });
        }
        return instance;
    };
})(jQuery, window);

!function(a, b) {
    "use strict";
    function c(a) {
        this.callback = a, this.ticking = !1;
    }
    function d(b) {
        return b && "undefined" != typeof a && (b === a || b.nodeType);
    }
    function e(a) {
        if (arguments.length <= 0) throw new Error("Missing arguments in extend function");
        var b, c, f = a || {};
        for (c = 1; c < arguments.length; c++) {
            var g = arguments[c] || {};
            for (b in g) f[b] = "object" != typeof f[b] || d(f[b]) ? f[b] || g[b] : e(f[b], g[b]);
        }
        return f;
    }
    function f(a) {
        return a === Object(a) ? a : {
            down: a,
            up: a
        };
    }
    function g(a, b) {
        b = e(b, g.options), this.lastKnownScrollY = 0, this.elem = a, this.debouncer = new c(this.update.bind(this)), 
        this.tolerance = f(b.tolerance), this.classes = b.classes, this.offset = b.offset, 
        this.scroller = b.scroller, this.initialised = !1, this.onPin = b.onPin, this.onUnpin = b.onUnpin, 
        this.onTop = b.onTop, this.onNotTop = b.onNotTop;
    }
    var h = {
        bind: !!function() {}.bind,
        classList: "classList" in b.documentElement,
        rAF: !!(a.requestAnimationFrame || a.webkitRequestAnimationFrame || a.mozRequestAnimationFrame)
    };
    a.requestAnimationFrame = a.requestAnimationFrame || a.webkitRequestAnimationFrame || a.mozRequestAnimationFrame, 
    c.prototype = {
        constructor: c,
        update: function() {
            this.callback && this.callback(), this.ticking = !1;
        },
        requestTick: function() {
            this.ticking || (requestAnimationFrame(this.rafCallback || (this.rafCallback = this.update.bind(this))), 
            this.ticking = !0);
        },
        handleEvent: function() {
            this.requestTick();
        }
    }, g.prototype = {
        constructor: g,
        init: function() {
            return g.cutsTheMustard ? (this.elem.classList.add(this.classes.initial), setTimeout(this.attachEvent.bind(this), 100), 
            this) : void 0;
        },
        destroy: function() {
            var a = this.classes;
            this.initialised = !1, this.elem.classList.remove(a.unpinned, a.pinned, a.top, a.initial), 
            this.scroller.removeEventListener("scroll", this.debouncer, !1);
        },
        attachEvent: function() {
            this.initialised || (this.lastKnownScrollY = this.getScrollY(), this.initialised = !0, 
            this.scroller.addEventListener("scroll", this.debouncer, !1), this.debouncer.handleEvent());
        },
        unpin: function() {
            var a = this.elem.classList, b = this.classes;
            (a.contains(b.pinned) || !a.contains(b.unpinned)) && (a.add(b.unpinned), a.remove(b.pinned), 
            this.onUnpin && this.onUnpin.call(this));
        },
        pin: function() {
            var a = this.elem.classList, b = this.classes;
            a.contains(b.unpinned) && (a.remove(b.unpinned), a.add(b.pinned), this.onPin && this.onPin.call(this));
        },
        top: function() {
            var a = this.elem.classList, b = this.classes;
            a.contains(b.top) || (a.add(b.top), a.remove(b.notTop), this.onTop && this.onTop.call(this));
        },
        notTop: function() {
            var a = this.elem.classList, b = this.classes;
            a.contains(b.notTop) || (a.add(b.notTop), a.remove(b.top), this.onNotTop && this.onNotTop.call(this));
        },
        getScrollY: function() {
            return void 0 !== this.scroller.pageYOffset ? this.scroller.pageYOffset : void 0 !== this.scroller.scrollTop ? this.scroller.scrollTop : (b.documentElement || b.body.parentNode || b.body).scrollTop;
        },
        getViewportHeight: function() {
            return a.innerHeight || b.documentElement.clientHeight || b.body.clientHeight;
        },
        getDocumentHeight: function() {
            var a = b.body, c = b.documentElement;
            return Math.max(a.scrollHeight, c.scrollHeight, a.offsetHeight, c.offsetHeight, a.clientHeight, c.clientHeight);
        },
        getElementHeight: function(a) {
            return Math.max(a.scrollHeight, a.offsetHeight, a.clientHeight);
        },
        getScrollerHeight: function() {
            return this.scroller === a || this.scroller === b.body ? this.getDocumentHeight() : this.getElementHeight(this.scroller);
        },
        isOutOfBounds: function(a) {
            var b = 0 > a, c = a + this.getViewportHeight() > this.getScrollerHeight();
            return b || c;
        },
        toleranceExceeded: function(a, b) {
            return Math.abs(a - this.lastKnownScrollY) >= this.tolerance[b];
        },
        shouldUnpin: function(a, b) {
            var c = a > this.lastKnownScrollY, d = a >= this.offset;
            return c && d && b;
        },
        shouldPin: function(a, b) {
            var c = a < this.lastKnownScrollY, d = a <= this.offset;
            return c && b || d;
        },
        update: function() {
            var a = this.getScrollY(), b = a > this.lastKnownScrollY ? "down" : "up", c = this.toleranceExceeded(a, b);
            this.isOutOfBounds(a) || (a <= this.offset ? this.top() : this.notTop(), this.shouldUnpin(a, c) ? this.unpin() : this.shouldPin(a, c) && this.pin(), 
            this.lastKnownScrollY = a);
        }
    }, g.options = {
        tolerance: {
            up: 0,
            down: 0
        },
        offset: 0,
        scroller: a,
        classes: {
            pinned: "headroom--pinned",
            unpinned: "headroom--unpinned",
            top: "headroom--top",
            notTop: "headroom--not-top",
            initial: "headroom"
        }
    }, g.cutsTheMustard = "undefined" != typeof h && h.rAF && h.bind && h.classList, 
    a.Headroom = g;
}(window, document);